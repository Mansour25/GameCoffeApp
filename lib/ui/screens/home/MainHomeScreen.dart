import 'dart:io';import 'package:awesome_dialog/awesome_dialog.dart';import 'package:coffe_play/controller/home/main_home_controller.dart';import 'package:coffe_play/controller/main_screens_controller/home_controller.dart';import 'package:coffe_play/core/AppData/AppColor.dart';import 'package:coffe_play/data/static_data.dart';import 'package:coffe_play/data/user_information.dart';import 'package:coffe_play/ui/screens/home/home_screen.dart';import 'package:coffe_play/ui/widgets/home/main_home_widgets/background_top_clipper_container.dart';import 'package:coffe_play/ui/widgets/home/main_home_widgets/user_card_top_container_clipper.dart';import 'package:coffe_play/ui/widgets/home/main_home_widgets/will_pop_scop_func.dart';import 'package:coffe_play/ui/widgets/public_widgets.dart';import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';class MainHomeScreen extends StatelessWidget {  const MainHomeScreen({super.key});  @override  Widget build(BuildContext context) {    print('masnour');    print(Get.height);    print(Get.width);    Get.put(MainHomeController());    return WillPopScope(      onWillPop: () => willPopScopFunction(context),      child: GetBuilder<MainHomeController>(builder: (logic) {        return Scaffold(          bottomNavigationBar: BottomNavBarMainHome(logic),          backgroundColor: AppColor.mainColorScaffoldWhiteDarker,          body: logic.screens[logic.current_index],        );      }),    );  }}class BottomNavBarMainHome extends StatelessWidget {  MainHomeController controller;  BottomNavBarMainHome(this.controller);  @override  Widget build(BuildContext context) {    return SizedBox(      height: 70.h,      child: BottomNavigationBar(        items: controller.items,        backgroundColor: Colors.white,        onTap: (value) => controller.chagne_index(value),        elevation: 10,        currentIndex: controller.current_index,        selectedItemColor: const Color(0xFFda2f37),        unselectedItemColor: const Color(0xFFB4B8BD),        iconSize: 35,        // selectedFontSize: 20,        selectedLabelStyle: const TextStyle(          fontFamily: 'NeoSans',          fontSize: 16,          fontWeight: FontWeight.w600,        ),        unselectedLabelStyle: const TextStyle(          fontFamily: 'NeoSans',          fontSize: 14,          fontWeight: FontWeight.w600,        ),      ),    );  }}class AvailableCardItemGames extends StatelessWidget {  String imgPath;  String GameName;  HomeController logic;  AvailableCardItemGames(this.imgPath, this.GameName, this.logic);  @override  Widget build(BuildContext context) {    return GestureDetector(        onTap: () {          if (UserInformation.user == UserStatus.visitor) {            logic.GoTO_SignIn(context);          } else {            logic.GoTo_DetailsGame(context, GameName);          }        },        child: Padding(          padding: EdgeInsets.symmetric(            horizontal: 5.w,            vertical: 10.h,          ),          child: PhysicalModel(            color: Colors.grey,            elevation: 10,            borderRadius: BorderRadius.circular(15),            child: Container(              padding: EdgeInsets.only(                right: 8.w,              ),              width: double.infinity,              height: 144.h,              decoration: BoxDecoration(                color: Colors.red,                borderRadius: BorderRadius.circular(15),              ),              child: Stack(                children: [                  SizedBox(                    width: double.infinity,                    height: double.infinity,                    child: Image.asset(                      imgPath,                      fit: BoxFit.fill,                    ),                  ),                  Positioned(                    top: 0,                    left: 0,                    child: Container(                      decoration: BoxDecoration(                        color: AppColor.mainColorRed,                        borderRadius: const BorderRadius.only(                          bottomRight: Radius.circular(15),                          topLeft: Radius.circular(15),                        ),                      ),                      width: 90.w,                      height: 30.h,                      child: Center(                        child: Text(                          GameName,                          style: const TextStyle(                            color: Colors.white,                            fontFamily: 'NeoSans',                            fontSize: 16,                            fontWeight: FontWeight.w600,                          ),                        ),                      ),                    ),                  ),                ],              ),            ),          ),        ));  }}class TopStackMainHome extends StatelessWidget {  const TopStackMainHome({super.key});  @override  Widget build(BuildContext context) {    return Container(      // color: Colors.blue,      width: double.infinity,      height: Get.height / 3,      child: const Stack(        children: [          BackGroundTopClipperContainerWithTitleAndNoti(),          UserCardTopContainerClipper(),        ],      ),    );  }}class ClipperTopContainerMainHome extends CustomClipper<Path> {  @override  Path getClip(Size size) {    double h = size.height;    double w = size.width;    var path = Path();    path.lineTo(0, h - 20.h);    path.quadraticBezierTo(50.w, h - 80.h, w * 0.75, h - 17.h);    path.quadraticBezierTo(w * 0.75 + 70.w, h, w, h - 20.h);    path.lineTo(w, 0);    path.close();    return path;  }  @override  bool shouldReclip(covariant CustomClipper<Path> oldClipper) {    return true;  }}