import 'dart:convert';import 'package:coffe_play/main.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';class LocalizationSettings {  late Locale _locale;  Map<String, String> _localizedValues = {};  LocalizationSettings({String initialLanguageCode = 'en'}) {    _locale = Locale(initialLanguageCode);  }  Locale get locale => _locale;  String? getTranslated(String key) {    return _localizedValues[key];  }  Future<void> loadLanguage() async {    String langCode = _locale.languageCode;    String jsonContent = await rootBundle.loadString('lib/localaization/locale/$langCode.json');    _localizedValues = json.decode(jsonContent);  }  Future<void> setLocale(Locale newLocale) async {    if (_locale == newLocale) return;    String newLangCode = newLocale.languageCode;    if (supportedLanguages.contains(newLangCode)) {      _locale = newLocale;      await loadLanguage();      WidgetsBinding binding = WidgetsFlutterBinding.ensureInitialized();      // استخدم دالة attachRootWidget لتعيين واجهة المستخدم الجديدة واستخدم runApp لتشغيلها      binding.attachRootWidget(const MainScreen());      runApp(const MainScreen());    }  }  static List<String> get supportedLanguages => ['en', 'ar'];}